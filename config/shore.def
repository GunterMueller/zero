/*
 * Define this if you want to use a different location for a
 * Linux-based huge tlb filesystem.
 */
#define HUGETLBFS_PATH "/mnt/huge/SSM-BUFPOOL"

/*
 * Define this if you want to include crash test hooks in your
 * executable.  (For use with ssh, really).
 * A release executable should not be built with this unless you
 * are a maintainer and want to test it.
 */
#undef USE_SSMTEST


/*
 * Define these if you do not like the default lengths (in tid_t.h)
 */
#undef COMMON_GTID_LENGTH
#undef COMMON_SERVER_HANDLE_LENGTH

/* 
 * Define this if you want to override the default number of
 * log partitions that can be open at any one time.
 */
#undef SM_LOG_PARTITIONS

/*
 * Enforce acceptable page size. Set with configure.
 * Users should not touch this here.   Use argument to configure instead.
 */
#if SM_PAGESIZE==1024
#elif SM_PAGESIZE==2048
#elif SM_PAGESIZE==4096
#elif SM_PAGESIZE==8192
#elif SM_PAGESIZE==1024*16
#elif SM_PAGESIZE==1024*32
#else
#error configured with illegitimate page size.  Must be (1,2,4,8,16 or 32) * 1024
#endif

/*
 * Experimental expensive latch stats.
 * Turn this on to get a better idea (approx) of latch waits
 * (split out for different page types).
 */
#define EXPENSIVE_LATCH_COUNTS 0

/* CS: Define this to keep the log files for later inspection or debug.
   If set, partitions are cleaned normally, but the call to unlink is
   skipped. Thus, the log manager should behave the exact same way, but
   the files will be kept.
 */
#define KEEP_LOG_PARTITIONS

/* CS: IF this is set, then system event log records, as well as certain
   selected log records (e.g., restore events), will contain an additional
   field with a timestamp. This is useful in experiments to correlate events
   in the log with time
*/
#define TIMED_LOG_RECORDS

/*
 * We found that pure spinning is much faster than mutex sleep/wake-up as in [JUNG13].
 * As far as we don't over-subscribe workers, this has no disadvantages.
 * Pure spinning means we don't have to do anything in lock release, we don't have to do
 * keep any of mutexes, so much faster.
 * \ingroup RAWLOCK
 */
#define PURE_SPIN_RAWLOCK

/* A flag whether the bufferpool should alternate location of latches and control blocks
 * starting at an odd multiple of 64B as follows: |CB0|L0|L1|CB1|CB2|L2|L3|CB3|...
 * This layout addresses a pathology that we attribute to the hardware spatial prefetcher.
 * The default layout allocates a latch right after a control block so that
 * the control block and latch live in adjacent cache lines (in the same 128B sector).
 * The pathology happens because when we write-access the latch, the processor prefetches
 * the control block in read-exclusive mode even if we late really only read-access the
 * control block. This causes unnecessary coherence traffic. With the new layout, we avoid
 * having a control block and latch in the same 128B sector.
 */
#define BP_ALTERNATE_CB_LATCH

#define USE_TLS_ALLOCATOR